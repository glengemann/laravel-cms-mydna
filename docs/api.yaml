openapi: 3.1.0
info:
  title: API
  version: 1.0.0
servers:
  - url: http://localhost:14000
    description: CMS MyDNA
paths:
  /api/login:
    post:
      tags:
        - Auth
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'admin@cms.com'
                password:
                  type: string
                  example: 'password'
      responses:
        '204':
          description: Login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 'eyJhbGciOi'
  /api/logout:
    post:
      tags:
        - Auth
      summary: Logout
      responses:
        '204':
          description: Logout
      security:
        - BearerAuth: []
  /api/categories:
    get:
      tags:
        - Categories
      summary: Get all categories
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - Categories
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Category created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        422:
          description: Unprocessable entity/content
  /api/categories/{id}:
    get:
      tags:
        - Categories
      summary: Get a category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the category
      responses:
        '200':
          description: A category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Category not found
    patch:
      tags:
        - Categories
      summary: Update a category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the category
      responses:
        '200':
          description: Category resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
    delete:
      tags:
        - Categories
      summary: Delete a category by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the category
      responses:
        '204':
          description: Category resource deleted
        409:
          description: Conflict
  /api/comments:
    get:
      tags:
        - Comments
      summary: Get all comments
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      tags:
        - Comments
      summary: Create a new comment
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Comment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        422:
          description: Unprocessable entity/content
  /api/comments/{id}:
    get:
      tags:
        - Comments
      summary: Get a comment by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the comment
      responses:
        '200':
          description: A comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
    patch:
      tags:
        - Comments
      summary: Update a comment by ID
      security:
          - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the comment
      responses:
        '200':
          description: Comment resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
    delete:
      tags:
        - Comments
      summary: Delete a comment by ID
      security:
        - BearerAuth: [ ]
      parameters:
          - name: id
            in: path
            required: true
            schema:
                type: integer
            description: The ID of the comment
      responses:
        '204':
          description: Comment resource deleted
  /api/comments/{id}/status/{status}:
    patch:
      tags:
        - Comments
      summary: Update a comment status by ID
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the comment
        - name: status
          in: path
          required: true
          schema:
            type: string
            enum: [approved, rejected, pending]
          description: The status of the comment
      responses:
        '200':
          description: Comment resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
  /api/posts:
    get:
      tags:
        - Posts
      summary: Get all posts
      parameters:
        - name: title[partial]
          in: query
          required: false
          schema:
            type: string
          description: The title contain the given string
        - name: title[start]
          in: query
          required: false
          schema:
            type: string
          description: The start of the title
        - name: title[end]
          in: query
          required: false
          schema:
              type: string
          description: The end of the title
        - name: content[partial]
          in: query
          required: false
          schema:
            type: string
          description: The content contain the given string
        - name: content[start]
          in: query
          required: false
          schema:
            type: string
          description: The start of the title
        - name: content[end]
          in: query
          required: false
          schema:
            type: string
          description: The end of the title
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      tags:
        - Posts
      summary: Create a new post
      security:
        - BearerAuth: [ ]
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '422':
          description: Unprocessable entity/content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      requestBody:
          required: true
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/Post'
  /api/posts/{id}:
    get:
      tags:
        - Posts
      summary: Get a post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the post
      responses:
        '200':
          description: A post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
    patch:
      tags:
        - Posts
      summary: Update a post by ID
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the post
      responses:
        '200':
          description: Post resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
    delete:
      tags:
        - Posts
      summary: Delete a post by ID
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the post
      responses:
        '204':
          description: Post resource deleted
        '409':
          description: Conflict
        '405':
          description: Method not allowed
components:
  schemas:
    Category:
      type: object
      description: A category
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
          example: 1
        name:
          type: string
          example: "Rock"
    Comment:
      type: object
      description: A comment
      deprecated: false
      properties:
        id:
          readOnly: true
          type: integer
          example: 1
        content:
          type: string
          example: "This is a comment"
        post_id:
          type: integer
          example: 1
        status:
          readOnly: true
          type: string
          required: false
          example: "approved"
    Post:
      type: object
      description: A post
      deprecated: false
      properties:
          id:
            readOnly: true
            type: integer
            example: 1
          title:
            type: string
            example: "Post title"
          content:
            type: string
            example: "This is a post"
          category_id:
            type: integer
            example: 1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
